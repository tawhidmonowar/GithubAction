name: Update JSON Data Weekly

on:
  schedule:
    - cron: '0 0 * * 0' # Runs every Sunday at midnight UTC
  workflow_dispatch: # Allows manual triggering

jobs:
  update-json:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for committing changes

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Gemini CLI
        run: npm install -g @google/gemini-cli

      - name: Update JSON with Gemini CLI
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          # Read the current JSON file
          JSON_CONTENT=$(cat data.json)
          
          # Use Gemini CLI to generate updated hashtags and realistic uses_count
          NEW_JSON=$(gemini --model gemini-2.5-flash-lite --output-format json -p "Given the following JSON data, keep the existing categories but update the 'hashtags' array for each category. 'uses_count' values reflecting real-world popularity (e.g., based on social media trends, with popular hashtags having millions of uses and niche ones having thousands). Ensure 'uses_count' is a string and matches realistic usage patterns. Also, update the 'last_update' field to today's date in MM-DD-YYYY format. Return the updated JSON object." --context "$JSON_CONTENT")
          
          # Validate JSON output
          echo "$NEW_JSON" | jq . > /dev/null 2>&1 || { echo "Invalid JSON output from Gemini CLI"; exit 1; }
          
          # Write the updated JSON back to the file
          echo "$NEW_JSON" > data.json

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add data.json
          git commit -m "Update data.json with new uses_count values and last_update date"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}